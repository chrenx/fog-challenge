Dataset:
fda_challenge:
    no gender
    missing data with nan
    csv file for each trial

turn_in_place: https://www.frontiersin.org/journals/neuroscience/articles/10.3389/fnins.2022.832463/full
    includes:       demographics, clinical condition, kinematics (video, acceleration, and angular velocity)
    medication:     ON 
    sensor:         IMU: a triaxial gyroscope (angular position rate sensor) and a triaxial accelerometer (acceleration sensor)
    location:       shank of most affected body side
    coordinate:     Sensor-Fixed Coordinates
        y-axis was approximately vertical, and the positive direction pointed downward 向下
        z-axis was approximately horizontal (anteroposterior direction), the positive direction pointed forward 向前
        x-axis direction was determined by the right-hand rule (mediolateral direction) 向右
    event:          turn in place
    lab or home:    lab
    ACC ML [g]	ACC AP [g]	ACC SI [g]	GYR ML [deg/s]	GYR AP [deg/s]	GYR SI [deg/s]

kaggle_pd_data: https://www.kaggle.com/competitions/tlvmc-parkinsons-freezing-gait-prediction/data
    event:          StartHesitation, Turn, Walking
    lab or home:    lab + home
    location:       lowerback
    coordinate:     sensor-fixed coordinates
        V: y
        AP: z
        ML: x


wind: 6304, train:val:test = 80:10:10
wind: 6976, train:val:test = 97:10:3

PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True ./scripts/train.sh



daphnet:-----------------
        train n trials : 13
        train seq len  : 778240
        train n window : 760

        val n trials   : 2
        val seq len    : 207872
        val n window   : 203

        test n trials  : 2
        test seq len   : 148480
        test n window  : 145

kaggle_pd_data_defog:-----------------
        train n trials : 76
        train seq len  : 2427904
        train n window : 2371

        val n trials   : 10
        val seq len    : 409600
        val n window   : 400

        test n trials  : 5
        test seq len   : 135168
        test n window  : 132

kaggle_pd_data_tdcsfog:-----------------  
        train n trials : 665
        train seq len  : 5309440
        train n window : 5185

        val n trials   : 84
        val seq len    : 849920
        val n window   : 830

        test n trials  : 84
        test seq len   : 726016
        test n window  : 709

turn_in_place:-----------------
        train n trials : 55
        train seq len  : 844800
        train n window : 825

        val n trials   : 8
        val seq len    : 122880
        val n window   : 120

        test n trials  : 8
        test seq len   : 122880
        test n window  : 120

TOTAL -------------------------
        train n trials : 809
        train seq len  : 9360384
        train n window : 9141

        val n trials   : 104
        val seq len    : 1590272
        val n window   : 1553

        test n trials  : 99
        test seq len   : 1132544
        test n window  : 1106

====================================================================================================
train val test:
 0 {
        'series_name': series_name,  #                           str
        'ori_filename': series_info['ori_filename'], #           str
        'start_t_idx': start_t_idx, # 0,     15552, ...               int
        'end_t_idx': end_t_idx,     # 15552, 15552+15552, ...         int
        'idx_feats': self.idx_feats, # {0: 'lowerback_acc', ...}
        'event': ['some event', ...] (window,)   ====> data loader: [('event', ..), ...] seq_len, bs
                                                                len(train_data['event']) = window
                                                                len(train_data['event'][0]) = bs
                    # 'model_input': model_input.cpu(), # (window, num_feats)  torch
        'lowerback': (window, 3)
        ....
        'gt': gt.cpu(), # (window, 3) one-hot                      torch
    }

====================================================================================================
71 个 trials, 71 keys
data/rectified_data/turn_in_place/all_turn_in_place.p { # already normalized
    'rectified_1_turn_in_place': {
        'ori_filename':txt_file,                                    
        'frame_idx': torch.tensor(frame_idx),                                   (N,)
        'event': np.array(event),                                               (N,)
        f'{l_or_r}_LatShank_Acc_ML': sample_normalize(torch.tensor(acc_ml)),    (N,)
        f'{l_or_r}_LatShank_Acc_AP': sample_normalize(torch.tensor(acc_ap)),    (N,)
        f'{l_or_r}_LatShank_Acc_SI': sample_normalize(torch.tensor(acc_si)),    (N,)
        f'{l_or_r}_LatShank_Gyr_ML': sample_normalize(torch.tensor(gyr_ml)),    (N,)
        f'{l_or_r}_LatShank_Gyr_AP': sample_normalize(torch.tensor(gyr_ap)),    (N,)
        f'{l_or_r}_LatShank_Gyr_SI': sample_normalize(torch.tensor(gyr_si)),    (N,)
        'gt': torch.tensor(gt),                                                 (N,) # 0 or 1
    }
}

833 个 trials, 833 keys
data/rectified_data/all_data/all_kaggle_pd_data_tdcsfog.p { # already normalized
    'rectified_1_kaggle_pd_data' :{
        'ori_filename': f"{lab_home}_" + csv_file,
        'event': df['event'].to_numpy(),                                           (N,)
        'LowerBack_Acc_V': sample_normalize(torch.tensor(df['AccV'].to_numpy(),    (N,) 
                                                            dtype=torch.float32)),
        'LowerBack_Acc_ML': sample_normalize(torch.tensor(df['AccML'].to_numpy(),  (N,) 
                                                            dtype=torch.float32)),
        'LowerBack_Acc_AP': sample_normalize(torch.tensor(df['AccAP'].to_numpy(),  (N,)  
                                                            dtype=torch.float32)),
        'gt': torch.tensor(df['gt'].to_numpy(), dtype=torch.float32),              (N,) # 0 or 1
    }
}

91 个 trials, 1027 keys
data/rectified_data/all_data/all_kaggle_pd_data_defog.p { # already normalized
    'rectified_1_kaggle_pd_data' :{
        'ori_filename': f"{lab_home}_" + csv_file,
        'event': event, 
        'LowerBack_Acc_V': sample_normalize(torch.tensor(df['AccV'].to_numpy(), 
                                                         dtype=torch.float32) * physical_const),
        'LowerBack_Acc_ML': sample_normalize(torch.tensor(df['AccML'].to_numpy(), 
                                                          dtype=torch.float32) * physical_const),
        'LowerBack_Acc_AP': sample_normalize(torch.tensor(df['AccAP'].to_numpy(), 
                                                          dtype=torch.float32) * physical_const),
        'gt': torch.tensor(df['gt'].to_numpy(), dtype=torch.float32),
    }
}

17 个 trials, 35 keys
data/rectified_data/all_data/all_daphnet.p {    # already normalized
        'ori_filename':txt_file,
        'event': np.array(event), 
        'L_Ankle_Acc_AP': sample_normalize(torch.tensor(ankle_acc_ap, dtype=torch.float32)),
        'L_Ankle_Acc_V': sample_normalize(torch.tensor(ankle_acc_v, dtype=torch.float32)),
        'L_Ankle_Acc_ML': sample_normalize(torch.tensor(ankle_acc_ml, dtype=torch.float32)),
        'L_MidLatThigh_Acc_AP': sample_normalize(torch.tensor(mid_thigh_acc_ap, dtype=torch.float32)),
        'L_MidLatThigh_Acc_V': sample_normalize(torch.tensor(mid_thigh_acc_v, dtype=torch.float32)),
        'L_MidLatThigh_Acc_ML': sample_normalize(torch.tensor(mid_thigh_acc_ml, dtype=torch.float32)),
        'LowerBack_Acc_AP': sample_normalize(torch.tensor(lowerback_acc_ap, dtype=torch.float32)),
        'LowerBack_Acc_V': sample_normalize(torch.tensor(lowerback_acc_v, dtype=torch.float32)),
        'LowerBack_Acc_ML': sample_normalize(torch.tensor(lowerback_acc_ml, dtype=torch.float32)),
        'gt': torch.tensor(gt, dtype=torch.float32),
    }

====================================================================================================
data/rectified_data/kaggle_pd_data/all_kaggle_pd_data.p: {     # already normalized
    "rectified_1_kaggle_pd_data": {
        'ori_filename': 'rectified_1_kaggle_pd_data_defog'
        'gt': (N,)     torch.int8    # 0 = no freeze, 1 = freeze, 2 = out of experiment
        'Annotation': (N,)          numpy
        'LowerBack_Acc_X': (N,)     torch
        'LowerBack_Acc_Y': (N,)     torch
        'LowerBack_Acc_Z': (N,)     torch
    },
    ...
}

kaggle (train_window15552.p) {
    'series_name': series_name,  #                              str
    'ori_series_name': series_info['ori_filename'], #           str
    'start_t_idx': start_t_idx, # 0,     15552, ...               int
    'end_t_idx': end_t_idx,     # 15552, 15552+15552, ...         int
    'model_input': model_input.cpu(), # (window, num_feats)  torch
    'gt': gt.cpu(), # (window, 3) one-hot                      torch
    'inference_gt': inference_gt.cpu(),                      # (window, 3) one-hot
}

====================================================================================================
single_data_dict(all_dataset_fog_release.p): {     # already normalized
    "rectified_1_dataset_fog_release": {
        'event': 
        'gt': (N,)     torch.int8    # 0 = no freeze, 1 = freeze, 2 = out of experiment
        'L_Ankle_Acc_X': (N,)
        'L_Ankle_Acc_Y': (N,)
        'L_Ankle_Acc_Z': (N,) 
        'L_MidLatThigh_Acc_X': (N,) 
        'L_MidLatThigh_Acc_Y': (N,) 
        'L_MidLatThigh_Acc_Z': (N,)
        'LowerBack_Acc_X': (N,) 
        'LowerBack_Acc_Y': (N,) 
        'LowerBack_Acc_Z': (N,)
    },
    ...
}

dataset_fog_release(all train_dataset_name.p): {
    0: {
        'series_name': series_name, # rectified_1_dataset_fog_release
        'start_t_idx': start_t_idx, # 0,     972, ...
        'end_t_idx': end_t_idx,     # 15552, 16524, ...
        'model_input': (BLKS//P, P*num_feats) ()
        'gt': (block_size,) 0,1,2
    }
}

====================================================================================================

====================================================================================================




数据集名称 data_fog_release:

raw data:
	fog : normal = 1:2.77
	64 Hz: 1秒64个data point
	每个series长度不一
    一共9个features: 'L_Ankle_Acc_X'
                    'L_Ankle_Acc_Y'
                    'L_Ankle_Acc_Z'
                    'L_MidLatThigh_Acc_X'
                    'L_MidLatThigh_Acc_Y'
                    'L_MidLatThigh_Acc_Z'
                    'LowerBack_Acc_X' 
                    'LowerBack_Acc_Y' 
                    'LowerBack_Acc_Z'

rectified data:
    每个series会被zero pad成block_size的倍数
    e.g. 假如一个raw data长度为 (31000,9), 经过pad --> (31104,9)  # 31104=15552*2
         这一份raw data会被拆成多份:
            raw_data[0:15552, :] --> (15552, 9)
            raw_data[972:972+15552, :] --> (15552, 9)
            ...
            raw_data[15552:31104,:] --> (15552, 9)
            这一份raw data就会被拆成16份
        16份data, 每一份会被reshape-->(864, patch_size, 9) --> (864, patch_size*9)
        (864, patch_size*9)会作为一个batch里的sample, 也是model的input
        model outputs probability for each class --> (batch_size, 864, 2)

block_size = 15552
block_stride = 15552 // 16 = 972
patch_size = 18
block_size // patch_size = 864








Time,
--------------------------------------------------------------------------------
GeneralEvent,                   (t,2)
ClinicalEvent,
--------------------------------------------------------------------------------
L Foot Contact,                 (t,8)
R Foot Contact,
L Foot Pressure,
R Foot Pressure,
Walkway_X,
Walkway_Y,
WalkwayPressureLevel,           #! WalkwayPressure
WalkwayFoot,
--------------------------------------------------------------------------------
                                13个主要躯干部位
LowerBack_Acc_X,                (t,84)  13*6 + 2*3
LowerBack_Acc_Y,
LowerBack_Acc_Z,
LowerBack_FreeAcc_E,
LowerBack_FreeAcc_N,
LowerBack_FreeAcc_U,

LowerBack_Gyr_X,                (t,45)  13*3 + 2*3
LowerBack_Gyr_Y,
LowerBack_Gyr_Z,

LowerBack_Mag_X,                (t,39)  13*3
LowerBack_Mag_Y,
LowerBack_Mag_Z,

LowerBack_VelInc_X,             (t,39)  13*3
LowerBack_VelInc_Y,
LowerBack_VelInc_Z,

LowerBack_OriInc_q0,            (t,91)  13*7
LowerBack_OriInc_q1,
LowerBack_OriInc_q2,
LowerBack_OriInc_q3,
LowerBack_Roll,
LowerBack_Pitch,
LowerBack_Yaw,

R_Wrist_Acc_X,R_Wrist_Acc_Y,R_Wrist_Acc_Z,R_Wrist_FreeAcc_E,R_Wrist_FreeAcc_N,R_Wrist_FreeAcc_U,R_Wrist_Gyr_X,R_Wrist_Gyr_Y,R_Wrist_Gyr_Z,R_Wrist_Mag_X,R_Wrist_Mag_Y,R_Wrist_Mag_Z,R_Wrist_VelInc_X,R_Wrist_VelInc_Y,R_Wrist_VelInc_Z,R_Wrist_OriInc_q0,R_Wrist_OriInc_q1,R_Wrist_OriInc_q2,R_Wrist_OriInc_q3,R_Wrist_Roll,R_Wrist_Pitch,R_Wrist_Yaw,

L_Wrist_Acc_X,L_Wrist_Acc_Y,L_Wrist_Acc_Z,L_Wrist_FreeAcc_E,L_Wrist_FreeAcc_N,L_Wrist_FreeAcc_U,L_Wrist_Gyr_X,L_Wrist_Gyr_Y,L_Wrist_Gyr_Z,L_Wrist_Mag_X,L_Wrist_Mag_Y,L_Wrist_Mag_Z,L_Wrist_VelInc_X,L_Wrist_VelInc_Y,L_Wrist_VelInc_Z,L_Wrist_OriInc_q0,L_Wrist_OriInc_q1,L_Wrist_OriInc_q2,L_Wrist_OriInc_q3,L_Wrist_Roll,L_Wrist_Pitch,L_Wrist_Yaw,

R_MidLatThigh_Acc_X,R_MidLatThigh_Acc_Y,R_MidLatThigh_Acc_Z,R_MidLatThigh_FreeAcc_E,R_MidLatThigh_FreeAcc_N,R_MidLatThigh_FreeAcc_U,R_MidLatThigh_Gyr_X,R_MidLatThigh_Gyr_Y,R_MidLatThigh_Gyr_Z,R_MidLatThigh_Mag_X,R_MidLatThigh_Mag_Y,R_MidLatThigh_Mag_Z,R_MidLatThigh_VelInc_X,R_MidLatThigh_VelInc_Y,R_MidLatThigh_VelInc_Z,R_MidLatThigh_OriInc_q0,R_MidLatThigh_OriInc_q1,R_MidLatThigh_OriInc_q2,R_MidLatThigh_OriInc_q3,R_MidLatThigh_Roll,R_MidLatThigh_Pitch,R_MidLatThigh_Yaw,

L_MidLatThigh_Acc_X,L_MidLatThigh_Acc_Y,L_MidLatThigh_Acc_Z,L_MidLatThigh_FreeAcc_E,L_MidLatThigh_FreeAcc_N,L_MidLatThigh_FreeAcc_U,L_MidLatThigh_Gyr_X,L_MidLatThigh_Gyr_Y,L_MidLatThigh_Gyr_Z,L_MidLatThigh_Mag_X,L_MidLatThigh_Mag_Y,L_MidLatThigh_Mag_Z,L_MidLatThigh_VelInc_X,L_MidLatThigh_VelInc_Y,L_MidLatThigh_VelInc_Z,L_MidLatThigh_OriInc_q0,L_MidLatThigh_OriInc_q1,L_MidLatThigh_OriInc_q2,L_MidLatThigh_OriInc_q3,L_MidLatThigh_Roll,L_MidLatThigh_Pitch,L_MidLatThigh_Yaw,

R_LatShank_Acc_X,R_LatShank_Acc_Y,R_LatShank_Acc_Z,R_LatShank_FreeAcc_E,R_LatShank_FreeAcc_N,R_LatShank_FreeAcc_U,R_LatShank_Gyr_X,R_LatShank_Gyr_Y,R_LatShank_Gyr_Z,R_LatShank_Mag_X,R_LatShank_Mag_Y,R_LatShank_Mag_Z,R_LatShank_VelInc_X,R_LatShank_VelInc_Y,R_LatShank_VelInc_Z,R_LatShank_OriInc_q0,R_LatShank_OriInc_q1,R_LatShank_OriInc_q2,R_LatShank_OriInc_q3,R_LatShank_Roll,R_LatShank_Pitch,R_LatShank_Yaw,

L_LatShank_Acc_X,L_LatShank_Acc_Y,L_LatShank_Acc_Z,L_LatShank_FreeAcc_E,L_LatShank_FreeAcc_N,L_LatShank_FreeAcc_U,L_LatShank_Gyr_X,L_LatShank_Gyr_Y,L_LatShank_Gyr_Z,L_LatShank_Mag_X,L_LatShank_Mag_Y,L_LatShank_Mag_Z,L_LatShank_VelInc_X,L_LatShank_VelInc_Y,L_LatShank_VelInc_Z,L_LatShank_OriInc_q0,L_LatShank_OriInc_q1,L_LatShank_OriInc_q2,L_LatShank_OriInc_q3,L_LatShank_Roll,L_LatShank_Pitch,L_LatShank_Yaw,

R_DorsalFoot_Acc_X,R_DorsalFoot_Acc_Y,R_DorsalFoot_Acc_Z,R_DorsalFoot_FreeAcc_E,R_DorsalFoot_FreeAcc_N,R_DorsalFoot_FreeAcc_U,R_DorsalFoot_Gyr_X,R_DorsalFoot_Gyr_Y,R_DorsalFoot_Gyr_Z,R_DorsalFoot_Mag_X,R_DorsalFoot_Mag_Y,R_DorsalFoot_Mag_Z,R_DorsalFoot_VelInc_X,R_DorsalFoot_VelInc_Y,R_DorsalFoot_VelInc_Z,R_DorsalFoot_OriInc_q0,R_DorsalFoot_OriInc_q1,R_DorsalFoot_OriInc_q2,R_DorsalFoot_OriInc_q3,R_DorsalFoot_Roll,R_DorsalFoot_Pitch,R_DorsalFoot_Yaw,

L_DorsalFoot_Acc_X,L_DorsalFoot_Acc_Y,L_DorsalFoot_Acc_Z,L_DorsalFoot_FreeAcc_E,L_DorsalFoot_FreeAcc_N,L_DorsalFoot_FreeAcc_U,L_DorsalFoot_Gyr_X,L_DorsalFoot_Gyr_Y,L_DorsalFoot_Gyr_Z,L_DorsalFoot_Mag_X,L_DorsalFoot_Mag_Y,L_DorsalFoot_Mag_Z,L_DorsalFoot_VelInc_X,L_DorsalFoot_VelInc_Y,L_DorsalFoot_VelInc_Z,L_DorsalFoot_OriInc_q0,L_DorsalFoot_OriInc_q1,L_DorsalFoot_OriInc_q2,L_DorsalFoot_OriInc_q3,L_DorsalFoot_Roll,L_DorsalFoot_Pitch,L_DorsalFoot_Yaw,

R_Ankle_Acc_X,R_Ankle_Acc_Y,R_Ankle_Acc_Z,R_Ankle_FreeAcc_E,R_Ankle_FreeAcc_N,R_Ankle_FreeAcc_U,R_Ankle_Gyr_X,R_Ankle_Gyr_Y,R_Ankle_Gyr_Z,R_Ankle_Mag_X,R_Ankle_Mag_Y,R_Ankle_Mag_Z,R_Ankle_VelInc_X,R_Ankle_VelInc_Y,R_Ankle_VelInc_Z,R_Ankle_OriInc_q0,R_Ankle_OriInc_q1,R_Ankle_OriInc_q2,R_Ankle_OriInc_q3,R_Ankle_Roll,R_Ankle_Pitch,R_Ankle_Yaw,

L_Ankle_Acc_X,L_Ankle_Acc_Y,L_Ankle_Acc_Z,L_Ankle_FreeAcc_E,L_Ankle_FreeAcc_N,L_Ankle_FreeAcc_U,L_Ankle_Gyr_X,L_Ankle_Gyr_Y,L_Ankle_Gyr_Z,L_Ankle_Mag_X,L_Ankle_Mag_Y,L_Ankle_Mag_Z,L_Ankle_VelInc_X,L_Ankle_VelInc_Y,L_Ankle_VelInc_Z,L_Ankle_OriInc_q0,L_Ankle_OriInc_q1,L_Ankle_OriInc_q2,L_Ankle_OriInc_q3,L_Ankle_Roll,L_Ankle_Pitch,L_Ankle_Yaw,

Xiphoid_Acc_X,Xiphoid_Acc_Y,Xiphoid_Acc_Z,Xiphoid_FreeAcc_E,Xiphoid_FreeAcc_N,Xiphoid_FreeAcc_U,Xiphoid_Gyr_X,Xiphoid_Gyr_Y,Xiphoid_Gyr_Z,Xiphoid_Mag_X,Xiphoid_Mag_Y,Xiphoid_Mag_Z,Xiphoid_VelInc_X,Xiphoid_VelInc_Y,Xiphoid_VelInc_Z,Xiphoid_OriInc_q0,Xiphoid_OriInc_q1,Xiphoid_OriInc_q2,Xiphoid_OriInc_q3,Xiphoid_Roll,Xiphoid_Pitch,Xiphoid_Yaw,

Forehead_Acc_X,Forehead_Acc_Y,Forehead_Acc_Z,Forehead_FreeAcc_E,Forehead_FreeAcc_N,Forehead_FreeAcc_U,Forehead_Gyr_X,Forehead_Gyr_Y,Forehead_Gyr_Z,Forehead_Mag_X,Forehead_Mag_Y,Forehead_Mag_Z,Forehead_VelInc_X,Forehead_VelInc_Y,Forehead_VelInc_Z,Forehead_OriInc_q0,Forehead_OriInc_q1,Forehead_OriInc_q2,Forehead_OriInc_q3,Forehead_Roll,Forehead_Pitch,Forehead_Yaw,

--------------------------------------------------------------------------------
(t,38) 

LPressure1,LPressure2,LPressure3,LPressure4,LPressure5,LPressure6,LPressure7,LPressure8,LPressure9,LPressure10,LPressure11,LPressure12,LPressure13,LPressure14,LPressure15,LPressure16,

Linsole:Acc_X,
Linsole:Acc_Y,
Linsole:Acc_Z,

Linsole:Gyr_X,
Linsole:Gyr_Y,
Linsole:Gyr_Z,

LTotalForce,

LCoP_X,
LCoP_Y,


RPressure1,RPressure2,RPressure3,RPressure4,RPressure5,RPressure6,RPressure7,RPressure8,RPressure9,RPressure10,RPressure11,RPressure12,RPressure13,RPressure14,RPressure15,RPressure16,

Rinsole:Acc_X,
Rinsole:Acc_Y,
Rinsole:Acc_Z,

Rinsole:Gyr_X,
Rinsole:Gyr_Y,
Rinsole:Gyr_Z,

RTotalForce,

RCoP_X,
RCoP_Y
